## zsh functions
# ===============================================================
function edit-command-line-inplace() {
  if [[ $CONTEXT != start ]]; then
    if (( ! ${+widgets[edit-command-line]} )); then
      autoload -Uz edit-command-line
      zle -N edit-command-line
    fi
    zle edit-command-line
    return
  fi
  () {
    emulate -L zsh -o nomultibyte
    local editor=("${(@Q)${(z)${VISUAL:-${EDITOR:-vi}}}}") 
    case $editor in
      (*vim*)
        "${(@)editor}" -c "normal! $(($#LBUFFER + 1))go" -- $1
      ;;
      (*emacs*)
        local lines=("${(@f)LBUFFER}") 
        "${(@)editor}" +${#lines}:$((${#lines[-1]} + 1)) $1
      ;;
      (*)
        "${(@)editor}" $1
      ;;
    esac
    BUFFER=$(<$1)
    CURSOR=$#BUFFER
  } =(<<<"$BUFFER") </dev/tty
}

## p10k functions
## ==============================================================
function toggle-time-segment() {
  (( ${+functions[p10k]} )) || return
  p10k display '*/time'=hide,show;
}

## asdf functions
## ==============================================================
function updAsdfTools() {
  for t in "${(@f)"$(<~/.tool-versions)"}"; do
    pkg="$(echo "${t}" | cut -d ' ' -f1)"
    if [[ "${t}" == *"system"* ]]; then
      echo "${pkg} is set as system package (nothing to do)"
    else
      asdf install ${pkg} latest && asdf global ${pkg} latest
    fi
  done
}

## aws functions
## ==============================================================
function aws-ecr-repo-empty-list () {
  for repo in $(aws ecr describe-repositories | jq -cr '.repositories | .[].repositoryName' | sed 's/\r//g'); do
    IMAGES=$(aws ecr list-images --repository-name ${repo} | grep imageDigest)
    #echo $i -- $repo
    if [[ "$?" -eq "1" ]]; then
      echo "${repo}: empty"
      if [[ "$1" == "-d" ]]; then
        aws ecr delete-repository --repository-name ${repo}
      fi
    fi
  done
}
