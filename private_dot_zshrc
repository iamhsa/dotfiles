# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files source by it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Move prompt to the bottom when zsh starts and on Ctrl+L.
zstyle ':z4h:' prompt-at-bottom 'yes'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'pc'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'no'

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
#zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
#zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
zstyle ':z4h:ssh:*noname0.eu' enable 'yes'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'           enable 'no'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
#zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'
zstyle ':z4h:ssh:*' send-extra-files '~/.env.zsh' '~/.vim/vimrc'

# Addionnal config for z4h teleportatio over SSH
zstyle ':completion:*:ssh:argument-1:'       tag-order    hosts users
zstyle ':completion:*:scp:argument-rest:'    tag-order    hosts files users
zstyle ':completion:*:(ssh|scp|rdp):*:hosts' hosts

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
z4h install ohmyzsh/ohmyzsh || return
z4h install asdf-vm/asdf || return

# Config for keychain omz plugin
zstyle :omz:plugins:keychain agents ssh
zstyle :omz:plugins:keychain options --quiet
if [ -f "$HOME/.ssh/keys/.loadkeys" ]; then
  zstyle :omz:plugins:keychain identities $HOME/.ssh/keys/*.pem
else
  zstyle :omz:plugins:keychain options --inherit any
fi

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Extend PATH.
path=(~/bin $path)

# Export environment variables.
export GPG_TTY=$TTY
if [ -f $(command -v bat) ]; then
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

# Source additional local files if they exist.
z4h source ~/.env.zsh


# Use additional Git repositories pulled in with `z4h install`.
z4h source asdf-vm/asdf/asdf.sh
z4h source $Z4H/ohmyzsh/ohmyzsh/lib/directories.zsh
z4h load   ohmyzsh/ohmyzsh/plugins/aws
z4h load   ohmyzsh/ohmyzsh/plugins/gitignore
z4h load   ohmyzsh/ohmyzsh/plugins/keychain

# Define key bindings.
z4h bindkey undo Ctrl+/   Shift+Tab # undo the last command line change
z4h bindkey redo Option+/           # redo the last undone command line change

z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv

# Define functions and completions.
unalias md
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md
[[ -n $ASDF_DIR ]] && fpath=($ASDF_DIR/completions(-/) $fpath)

# Define named directories: ~w <=> Windows home directory on WSL.
[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

# Define aliases.
alias tree='tree -a -I .git'
alias diff='diff --color'

# Add flags to existing aliases.
alias ls="${aliases[ls]:-ls} --group-directories-first"
alias ll="${aliases[ls]:-ls} -lh"
alias la="${aliases[ll]:-ls} -A"
alias l="${aliases[ll]:-ls}"
alias vi="vim"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu
