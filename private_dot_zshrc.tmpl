# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files sourced from it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Keyboard type: 'mac' or 'pc'.
{{- if eq .chezmoi.os "darwin" }}
zstyle ':z4h:bindkey' keyboard  'mac'
{{- else }}
zstyle ':z4h:bindkey' keyboard  'pc'
{{ end }}

{{- if eq .chezmoi.os "linux" }}
# Start tmux if not already in tmux.
#zstyle ':z4h:' start-tmux       command tmux -u new -A -D -t z4h
{{- end }}

# Enable term shell integration
zstyle ':z4h:' term-shell-integration 'yes'

# Whether to move prompt to the bottom when zsh starts and on Ctrl+L.
zstyle ':z4h:' prompt-at-bottom 'yes'

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration 'yes'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'no'

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
#zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
#zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
zstyle ':z4h:ssh:*noname0*'       enable 'yes'
zstyle ':z4h:ssh:*noname1*'       enable 'yes'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'               enable 'no'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
#zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'
zstyle ':z4h:ssh:*' send-extra-files '~/.vim/vimrc' '~/.zsh_functions'

# Addionnal config for z4h teleportatio over SSH
zstyle ':completion:*:ssh:argument-1:'       tag-order    hosts users
zstyle ':completion:*:scp:argument-rest:'    tag-order    hosts files users
zstyle ':completion:*:(ssh|scp|rdp):*:hosts' hosts

# Makes transient prompt work properly when closing ssh connections
#z4h bindkey z4h-eof Ctrl+D
#setopt ignore_eof

# Terminal title
zstyle ':z4h:term-title:ssh'   preexec '%n@%m: ${1//\%/%%}'
zstyle ':z4h:term-title:ssh'   precmd  '%n@%m: %~'
zstyle ':z4h:term-title:local' preexec '${1//\%/%%}'
zstyle ':z4h:term-title:local' precmd  '%~ %*'

# Inactive zsh-syntax-highlighting
zstyle ':z4h:zsh-syntax-highlighting' channel 'none'


# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`.
z4h install ohmyzsh/ohmyzsh || return                            # Install ohmyzsh
z4h install zdharma-continuum/fast-syntax-highlighting || return # Install fast-syntax-highlighting

{{- if eq .chezmoi.os "linux" }}
if [[ -e ~/.ssh/keys/.loadkeys ]]; then
  zstyle ':z4h:ssh-agent:' start      yes
  zstyle ':z4h:ssh-agent:' extra-args -t 20h
fi
{{- end }}

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Extend PATH.
#path=(~/.local/bin ${HOMEBREW_PREFIX}/opt/ruby/bin ${KREW_ROOT:-$HOME/.krew}/bin $HOME/.rd/bin ${HOMEBREW_PREFIX}/openssl@3/bin $path)
#path=(~/.local/bin ${KREW_ROOT:-$HOME/.krew}/bin $path)
path=(~/.local/bin $path)

# Prompt smooth rendering
# See https://github.com/romkatv/zsh4humans/blob/master/tips.md#prompt
POSTEDIT=$'\n\n\e[2A'

# Export environment variables.
export GPG_TTY=$TTY
export EDITOR=nvim
export VISUAL=nvim
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME"/aws/config
export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME"/aws/credentials
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
{{- if (and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "wsl")) }}
export PATH="/opt/google-cloud-cli/bin:$PATH"
export BROWSER=/usr/bin/wslview # wslview is a part of wslu
{{- end }}

# Source additional local files if they exist.
z4h source ~/.zsh_functions
z4h source ${HOMEBREW_PREFIX}/bin/virtualenvwrapper.sh
z4h source ${HOME}/.cargo/env
z4h source ${HOMEBREW_PREFIX}/opt/nvm/nvm.sh
z4h source ${Z4H}/ohmyzsh/ohmyzsh/lib/cli.zsh
z4h source /usr/share/doc/pkgfile/command-not-found.zsh
z4h source /usr/share/bash-completion/completions/az
z4h source ${XDG_CONFIG_HOME}/shell/p10k.wifi.zsh
z4h source ${XDG_CONFIG_HOME}/shell/p10k.mise.zsh
z4h source ${XDG_CONFIG_HOME}/shell/p10k.lpass.zsh
z4h load   ohmyzsh/ohmyzsh/plugins/aws
z4h load   ohmyzsh/ohmyzsh/plugins/gitignore
z4h load   ohmyzsh/ohmyzsh/plugins/shell-proxy
z4h load   zdharma-continuum/fast-syntax-highlighting

# Define key bindings.
z4h bindkey z4h-backward-kill-word  Ctrl+Backspace     Ctrl+H
z4h bindkey z4h-backward-kill-zword Ctrl+Alt+Backspace

z4h bindkey undo Ctrl+/ Shift+Tab  # undo the last command line change
z4h bindkey redo Alt+/             # redo the last undone command line change

z4h bindkey z4h-cd-back    Alt+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Alt+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Alt+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Alt+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv
autoload edit-command-line

#bindkey -v
#zle -N edit-command-line-inplace
#bindkey -M vicmd v edit-command-line
#bindkey "^E" edit-command-line-inplace

# Define functions
#unalias md # remove alias from omz/directories
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
# ==> see also .zsh_function

# Deal with completions.
compdef _directories md
fpath=($HOME/.local/share/zsh/site-functions $fpath)

# Define aliases.
alias clear=z4h-clear-screen-soft-bottom
alias tree='tree -a -I .git'
alias diff='diff --color'

# Add flags to existing aliases.
if [[ "$(uname -s)" == "Darwin" ]]; then
  alias rm="grm"
  alias ls="gls --group-directories-first --color=auto --literal"
else
  #alias ls="ls --group-directories-first --color=auto --literal"
  alias ls="eza --group-directories-first --icons=always $@"
fi
alias ll="${aliases[ls]:-ls} -lh --git"
alias la="${aliases[ll]:-ls} -A"
alias l="${aliases[ll]:-ls}"
alias vi="nvim"
alias rot13="tr a-mn-zA-MN-Z n-za-mN-ZA-M"

#export PYENV_ROOT="$HOME/.pyenv"
#if (command -v pyenv >/dev/null); then
#  export PATH="$PYENV_ROOT/bin:$PATH" 
#  eval "$(pyenv init -)"
#fi
#
export COLUMNS="120"
export PATH="$PATH:/home/hsalesses/ACLI"

if (command -v mise > /dev/null); then
  eval "$(mise activate zsh)"
fi

## Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu

